#!/bin/csh -f

#
# Program: ftp.ebi.ac.uk_interpro
#
# Original Author: kstone
#
# Purpose:
#
#	Download Interpro vocab and GO mapping
#

cd `dirname $0` && source ./Configuration 

# Full URLs for Interpro files
setenv URL_IP1 'ftp://ftp.ebi.ac.uk/pub/databases/interpro/interpro2go'
setenv URL_IP2 'ftp://ftp.ebi.ac.uk/pub/databases/interpro/names.dat'
setenv URL_IP3 'ftp://ftp.ebi.ac.uk/pub/databases/interpro/short_names.dat'

# Full path to download directories
setenv DOWNLOADS_IP	${DATADOWNLOADS}/ftp.ebi.ac.uk/pub/databases/interpro

# Full path the read/write lock directory
setenv LOCK_DIR	${DOWNLOADS_IP}

# full path to log files
setenv LOGFILE_IP	${MIRRORLOG}/ftp.ebi.ac.uk.interpro.log

mkdir -p $DOWNLOADS_IP
mkdir -p $MIRRORLOG

#
# wget
# -S = print the headers sent by HTTP servers and responses sent by FTP servers.
# -o = full path to log file
# -O = full path to output file
# -t = number of retries
# -r = reverse
# -k 7 = sort by the 7th column
# -nd = don't create directories
# -m = Turn on options suitable for mirroring. This option turns on recursion 
#    and time-stamping, sets infinite recursion depth and keeps FTP 
#    directory listings. It is currently equivalent to .-r -N -l 
#    inf --no-remove-listing.. 

# run mirror_lock to place lock file
# this command will return non-zero if  read or write lock is found
# attempt to set lock in the parent directory of interpro - 
# we don't want one to be mirrored without the other

# attempt to set interpro write lock
mirror_lock wlock mirror_wget ${LOCK_DIR} > ${LOGFILE_IP}
if ($status != 0) then
  echo mirror_lock returned nonzero status...exiting ftp.ebi.ac.uk interpro 
  echo "See logs at ${LOGFILE_IP}"
  echo "Stop Time: `date`"
  exit (1)
endif

# run Interpro mirror
cd ${DOWNLOADS_IP}
foreach url_ip ( $URL_IP1 $URL_IP2 $URL_IP3 )
    echo "downloading $url_ip"
    wget -a ${LOGFILE_IP} -S -t 10 -nd --retr-symlinks -m "${url_ip}"
end

echo ${MIRROR_WGET}

cd ${MIRROR_WGET}
mirror_lock unlock mirror_wget ${LOCK_DIR} >> ${LOGFILE_IP}
