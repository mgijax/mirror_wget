#!/bin/csh -f

#
# Program: ftp.ncbi.nih.gov.refseqRel
#
# Original Author: sc
#
# Purpose:
#
#	Download the refseq release *.rna.gbff.* and *.protein.gpff.*
#
#HISTORY
#
## - lnh 01/29/2015 - TR11918 
#    Changed the mirror download base directory from release/vertebrate_mammalian to release/complete
#    Created a new directory called complete under ${DATADOWNLOADS}/refseq/
#    Added a step to also download the release*.removed-records.gz file
#    Added a step to also download the release Number file
#   

cd `dirname $0` && source ./Configuration
setenv SCRIPT_NAME `basename $0`
setenv LOG ${MIRRORLOG}/${SCRIPT_NAME}.log
rm -f ${LOG}
touch ${LOG}
echo "$0" >> ${LOG}
echo `date` >> ${LOG}

setenv refseq_deletes ${DATADOWNLOADS}/refseq/refseq_deletes
cd ${DATADOWNLOADS}/refseq/complete
# Full URL of gbff files
#setenv URL1 'ftp://ftp.ncbi.nih.gov/refseq/release/vertebrate_mammalian/*rna.gbff*'
setenv URL1 'ftp://ftp.ncbi.nih.gov/refseq/release/complete/*rna.gbff*'

# Full URL of gpff files
#setenv URL2 'ftp://ftp.ncbi.nih.gov/refseq/release/vertebrate_mammalian/*.gpff*'
setenv URL2 'ftp://ftp.ncbi.nih.gov/refseq/release/complete/*protein.gpff*'

# Full URL of depracated ACCECCION  
#
setenv URL3 'ftp://ftp.ncbi.nih.gov/refseq/release/release-catalog/release*.removed-records.gz' 

#Full path to the release number
#
setenv URL4 'ftp://ftp.ncbi.nih.gov/refseq/release/RELEASE_NUMBER' 

# full path to log files
setenv LOGFILE1	${MIRRORLOG}/ftp.ncbi.nih.gov.refseqRel.gbff.log
setenv LOGFILE2 ${MIRRORLOG}/ftp.ncbi.nih.gov.refseqRel.gpff.log

#
# wget
# -S = print the headers sent by HTTP servers and responses sent by FTP servers.
# -o = full path to log file
# -O = full path to output file
# -t = number of retries
# -r = reverse
# -k 7 = sort by the 7th column
# -m = Turn on options suitable for mirroring. This option turns on recursion 
#    and time-stamping, sets infinite recursion depth and keeps FTP 
#    directory listings. It is currently equivalent to .-r -N -l 
#    inf --no-remove-listing.. 

rm *
wget -o ${LOGFILE1} -S -t 10 -nd -m "${URL1}"
wget -o ${LOGFILE2} -S -t 10 -nd -m "${URL2}"
wget -S -t 10 -nd -m "${URL4}" >> ${LOG}

cat ${LOGFILE1} >> ${LOG}
cat ${LOGFILE2} >> ${LOG}
#download the release*.removed-records.gz file
cd ${refseq_deletes}
wget -S -t 10 -nd -m "${URL3}" >> ${LOG}

echo `date` >> ${LOG}
echo "Program complete" >> ${LOG}
